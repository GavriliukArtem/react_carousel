{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","imgPosition","setImgPosition","lastImgPosition","length","isDisabledNext","isDisabledPrev","carouselStyle","width","carouselImageStyle","transform","transition","className","style","map","image","index","src","alt","onClick","prev","type","disabled","App","state","handleInputChange","event","target","name","value","setState","prevState","this","action","method","htmlFor","id","min","onChange","max","checked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3f591f2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [imgPosition, setImgPosition] = useState(0);\n\n  const lastImgPosition = images.length - frameSize;\n  const isDisabledNext = imgPosition === lastImgPosition && !infinite;\n  const isDisabledPrev = imgPosition === 0 && !infinite;\n\n  const carouselStyle = {\n    width: `${itemWidth * frameSize}px`,\n  };\n\n  const carouselImageStyle = {\n    transform: `translateX(${-(imgPosition * itemWidth)}px)`,\n    transition: `transform ${animationDuration}ms ease`,\n  };\n\n  const handlePrev = () => {\n    if (imgPosition > 0) {\n      setImgPosition((prev) => (prev - step >= 0 ? prev - step : 0));\n    } else {\n      setImgPosition(lastImgPosition);\n    }\n  };\n\n  const handleNext = () => {\n    if (imgPosition < lastImgPosition) {\n      setImgPosition((prev) => (prev + step <= lastImgPosition\n        ? prev + step\n        : lastImgPosition\n      ));\n    } else {\n      setImgPosition(0);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\" style={carouselStyle}>\n      <ul className=\"Carousel__list\">\n        {images.map((image, index) => (\n          <li key={image} className=\"Carousel__item\" style={carouselImageStyle}>\n            <img src={image} alt={`${index + 1}`} width={itemWidth} />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button onClick={handlePrev} type=\"button\" disabled={isDisabledPrev}>\n          Prev\n        </button>\n\n        <button\n          onClick={handleNext}\n          type=\"button\"\n          data-cy=\"next\"\n          disabled={isDisabledNext}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.pn',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    if (name === 'infinite') {\n      this.setState((prevState) => ({ infinite: !prevState.infinite }));\n\n      return;\n    }\n\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: +value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <form className=\"form\" action=\"#\" method=\"post\">\n          <label className=\"form__label\" htmlFor=\"itemId\">\n            Item Width:&nbsp;\n            <input\n              className=\"form__input\"\n              type=\"number\"\n              name=\"itemWidth\"\n              id=\"itemId\"\n              min={130}\n              step={10}\n              value={itemWidth}\n              onChange={this.handleInputChange}\n            />\n          </label>\n\n          <label className=\"form__label\" htmlFor=\"frameId\">\n            Frame Size:&nbsp;\n            <input\n              className=\"form__input\"\n              type=\"number\"\n              name=\"frameSize\"\n              id=\"frameId\"\n              min={1}\n              max={images.length}\n              value={frameSize}\n              onChange={this.handleInputChange}\n            />\n          </label>\n\n          <label className=\"form__label\" htmlFor=\"stepId\">\n            Step:&nbsp;\n            <input\n              className=\"form__input\"\n              type=\"number\"\n              name=\"step\"\n              id=\"stepId\"\n              min={1}\n              value={step}\n              onChange={this.handleInputChange}\n            />\n          </label>\n\n          <label className=\"form__label\" htmlFor=\"animationDurationId\">\n            Animation Duration:&nbsp;\n            <input\n              className=\"form__input\"\n              type=\"number\"\n              name=\"animationDuration\"\n              id=\"animationDurationId\"\n              min={500}\n              max={10000}\n              step={500}\n              value={animationDuration}\n              onChange={this.handleInputChange}\n            />\n          </label>\n\n          <label className=\"form__label\" htmlFor=\"infiniteId\">\n            Infinite:&nbsp;\n            <input\n              className=\"form__input\"\n              type=\"checkbox\"\n              name=\"infinite\"\n              id=\"infiniteId\"\n              checked={infinite}\n              onChange={this.handleInputChange}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}